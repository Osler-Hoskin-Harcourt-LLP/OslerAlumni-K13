@using CMS.Helpers
@using OslerAlumni.Mvc.Core.Definitions
@using OslerAlumni.Mvc.Extensions
@using OslerAlumni.Mvc.Extensions.OslerControls.Image
@using OslerAlumni.Mvc.Models
@model ProfileDetailsPageViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="c-page">
    <div class="row">
        @if (!string.IsNullOrWhiteSpace(Model.ProfileImageUrl))
        {
            <div class="columns small-12 medium-4 has-m-margin-bottom ">
                @Html.Osler().Image(Model.ProfileImageUrl).WithAltText("").ToHtmlString()
            </div>
        }
        <div class="columns small-12 medium-8">
            <div class="o-cell-heading">
                <h1>@Model.Title</h1>
                @if (Model.IncludeEmailInDirectory || !string.IsNullOrWhiteSpace(@Model.LinkedInUrl) || !string.IsNullOrWhiteSpace(@Model.TwitterUrl) || !string.IsNullOrWhiteSpace(@Model.InstagramUrl))
                {
                    <ul class="c-list-contact-info">
                        @if (Model.IncludeEmailInDirectory)
                        {
                            <li><a class="no-underline" href="mailto:@(Model.Email)" target="_blank">@Model.Email</a></li>
                        }
                        @if (!string.IsNullOrWhiteSpace(@Model.LinkedInUrl))
                        {
                            <li class="social-link">
                                <img class="c-svg" src="/build/images/icons/ico-linkedin.svg" alt="">
                                <a class="no-underline" href="@Model.LinkedInUrl" target="_blank">
                                    @Model.LinkedInHandle
                                </a>
                            </li>
                        }
                        @if (!string.IsNullOrWhiteSpace(@Model.TwitterUrl))
                        {
                            <li class="social-link">
                                <img class="c-svg" src="/build/images/icons/ico-twitter.svg" alt="">
                                <a class="no-underline" href="@Model.TwitterUrl" target="_blank">
                                    @Model.TwitterHandle
                                </a>
                            </li>
                        }
                        @if (!string.IsNullOrWhiteSpace(@Model.InstagramUrl))
                        {
                            <li class="social-link">
                                <img class="c-svg" src="/build/images/icons/ico-instagram.svg" alt="">
                                <a class="no-underline" href="@Model.InstagramUrl" target="_blank">
                                    @Model.InstagramHandle
                                </a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="columns small-12 medium-8">
            <div class="s-richtext has-title">
                <h2 class="has-border-bottom">@ResHelper.GetString(Constants.ResourceStrings.Profile.BasicInformation)</h2>

                <div class="o-container-row has-padding-bottom c-list-directory-detail">
                    @if (!string.IsNullOrWhiteSpace(Model.City) || !string.IsNullOrWhiteSpace(Model.Province) || !string.IsNullOrWhiteSpace(Model.Country))
                    {

                        <div class="o-container-column-half">

                            @if (!string.IsNullOrWhiteSpace(Model.City))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.CityLabel)</p>

                                <p>@Model.City</p>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.Province))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.ProvinceLabel)</p>

                                <p>@Model.Province</p>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.Country))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.CountryLabel)</p>

                                <p>@Model.Country</p>
                            }

                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.JobTitle) || !string.IsNullOrWhiteSpace(Model.Company)|| (Model.YearOfCallAndJurisdictions?.Any() ?? false) || !string.IsNullOrWhiteSpace(Model.CurrentIndustry) || (Model.EducationHistory?.Any() ?? false))
                    {


                        <div class="o-container-column-half">

                            @if (!string.IsNullOrWhiteSpace(Model.JobTitle))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.JobTitleLabel)</p>

                                <p>@Model.JobTitle</p>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.Company))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.CompanyLabel)</p>

                                <p>@Model.Company</p>
                            }


                            @if (Model.YearOfCallAndJurisdictions?.Any() ?? false)
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.YearofCallLabel)</p>

                                @Html.DisplayFor(model => model.YearOfCallAndJurisdictions)
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.CurrentIndustry))
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.IndustriesLabel)</p>

                                <p>@Model.CurrentIndustry</p>
                            }

                            @if (Model.EducationHistory?.Any() ?? false)
                            {
                                <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.EducationHistoryLabel)</p>
                                <div class="has-unstyled-list">
                                    @Html.DisplayFor(model => model.EducationHistory, "EducationRecordList")
                                </div>
                            }
                        </div>
                    }
                </div>
                @if (Model.BoardMemberships?.Any() ?? false)
                {
                    <h2 class="has-border-bottom">@ResHelper.GetString(Constants.ResourceStrings.Profile.BoardMembershipsHeader)</h2>
                    <div class="o-container-row has-padding-bottom c-list-directory-detail">
                        <div class="o-container-column-half">
                            <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.BoardMembershipsLabel)</p>
                            <div class="has-unstyled-list">
                                @Html.DisplayFor(model => model.BoardMemberships, "UnorderedList")
                            </div>
                        </div>
                    </div>
                        
                }
                @if (!string.IsNullOrWhiteSpace(Model.YearsAtOsler) || (Model.OfficeLocations?.Any() ?? false) || (Model.PracticeAreas?.Any() ?? false) )
                {
                    <h2 class="has-border-bottom">@ResHelper.GetString(Constants.ResourceStrings.Profile.WhileAtOsler)</h2>

                    if (!string.IsNullOrWhiteSpace(Model.YearsAtOsler) || (Model.OfficeLocations?.Any() ?? false) || (Model.PracticeAreas?.Any() ?? false))
                    {

                        <div class="o-container-row has-padding-bottom c-list-directory-detail">
                            @if (!string.IsNullOrWhiteSpace(Model.YearsAtOsler) || (Model.OfficeLocations?.Any() ?? false))
                            {
                                <div class="o-container-column-half">
                                    @if (!string.IsNullOrWhiteSpace(Model.YearsAtOsler))
                                    {
                                        <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.YearsAtOslerLabel)</p>
                                        <p>@Html.DisplayFor(model => model.YearsAtOsler)</p>
                                    }
                                    @if (Model.OfficeLocations?.Any() ?? false)
                                    {
                                        <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.LocationsLabel)</p>
                                        <div class="has-unstyled-list">
                                            @Html.DisplayFor(model => model.OfficeLocations, "UnorderedList")
                                        </div>
                                    }
                                </div>
                            
                            }

                            @if (Model.PracticeAreas?.Any() ?? false)
                            {
                                <div class="o-container-column-half">

                                    <p class="is-bold no-margin-bottom is-description">@ResHelper.GetString(Constants.ResourceStrings.Profile.PracticeAreasLabel)</p>
                                    <div class="has-unstyled-list">
                                        @Html.DisplayFor(model => model.PracticeAreas, "UnorderedList")
                                    </div>
                                </div>
                            }
                        </div>
                    }

                }

            </div>
        </div>
    </div>
</div>
