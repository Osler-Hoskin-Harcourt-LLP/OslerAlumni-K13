//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.CustomTables;
using OslerAlumni.OnePlace.Kentico.Models;

[assembly: RegisterCustomTable(CustomTable_DataSubmissionQueueItem.CLASS_NAME, typeof(CustomTable_DataSubmissionQueueItem))]

namespace OslerAlumni.OnePlace.Kentico.Models
{

    /// <summary>
    /// Represents a content item of type CustomTable_DataSubmissionQueueItem.
    /// </summary>
    public partial class CustomTable_DataSubmissionQueueItem : CustomTableItem
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "OslerAlumni.CustomTable_DataSubmissionQueue";


        /// <summary>
        /// The instance of the class that provides extended API for working with CustomTable_DataSubmissionQueueItem fields.
        /// </summary>
        private readonly CustomTable_DataSubmissionQueueItemFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// Method.
        /// </summary>
        [DatabaseField]
        public int Method
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("Method"), 0);
            }
            set
            {
                SetValue("Method", value);
            }
        }


        /// <summary>
        /// External ID.
        /// </summary>
        [DatabaseField]
        public string ExternalId
        {
            get
            {
                return ValidationHelper.GetString(GetValue("ExternalId"), @"");
            }
            set
            {
                SetValue("ExternalId", value);
            }
        }


        /// <summary>
        /// Payload.
        /// </summary>
        [DatabaseField]
        public string Payload
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Payload"), @"");
            }
            set
            {
                SetValue("Payload", value);
            }
        }


        /// <summary>
        /// Payload type.
        /// </summary>
        [DatabaseField]
        public string PayloadType
        {
            get
            {
                return ValidationHelper.GetString(GetValue("PayloadType"), @"");
            }
            set
            {
                SetValue("PayloadType", value);
            }
        }


        /// <summary>
        /// Total attempts.
        /// </summary>
        [DatabaseField]
        public int TotalAttempts
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("TotalAttempts"), 0);
            }
            set
            {
                SetValue("TotalAttempts", value);
            }
        }


        /// <summary>
        /// Last response.
        /// </summary>
        [DatabaseField]
        public string LastResponse
        {
            get
            {
                return ValidationHelper.GetString(GetValue("LastResponse"), @"");
            }
            set
            {
                SetValue("LastResponse", value);
            }
        }


        /// <summary>
        /// Processed.
        /// </summary>
        [DatabaseField]
        public bool IsProcessed
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("IsProcessed"), false);
            }
            set
            {
                SetValue("IsProcessed", value);
            }
        }


        /// <summary>
        /// Context object type.
        /// </summary>
        [DatabaseField]
        public string ContextObjectType
        {
            get
            {
                return ValidationHelper.GetString(GetValue("ContextObjectType"), @"");
            }
            set
            {
                SetValue("ContextObjectType", value);
            }
        }


        /// <summary>
        /// Context object ID.
        /// </summary>
        [DatabaseField]
        public int ContextObjectId
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("ContextObjectId"), 0);
            }
            set
            {
                SetValue("ContextObjectId", value);
            }
        }


        /// <summary>
        /// References to other queued tasks that have to be executed prior to this one.
        /// </summary>
        [DatabaseField]
        public string DependsOnItemIds
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DependsOnItemIds"), @"");
            }
            set
            {
                SetValue("DependsOnItemIds", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with CustomTable_DataSubmissionQueueItem fields.
        /// </summary>
        [RegisterProperty]
        public CustomTable_DataSubmissionQueueItemFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with CustomTable_DataSubmissionQueueItem fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class CustomTable_DataSubmissionQueueItemFields : AbstractHierarchicalObject<CustomTable_DataSubmissionQueueItemFields>
        {
            /// <summary>
            /// The content item of type CustomTable_DataSubmissionQueueItem that is a target of the extended API.
            /// </summary>
            private readonly CustomTable_DataSubmissionQueueItem mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="CustomTable_DataSubmissionQueueItemFields" /> class with the specified content item of type CustomTable_DataSubmissionQueueItem.
            /// </summary>
            /// <param name="instance">The content item of type CustomTable_DataSubmissionQueueItem that is a target of the extended API.</param>
            public CustomTable_DataSubmissionQueueItemFields(CustomTable_DataSubmissionQueueItem instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// Method.
            /// </summary>
            public int Method
            {
                get
                {
                    return mInstance.Method;
                }
                set
                {
                    mInstance.Method = value;
                }
            }


            /// <summary>
            /// External ID.
            /// </summary>
            public string ExternalId
            {
                get
                {
                    return mInstance.ExternalId;
                }
                set
                {
                    mInstance.ExternalId = value;
                }
            }


            /// <summary>
            /// Payload.
            /// </summary>
            public string Payload
            {
                get
                {
                    return mInstance.Payload;
                }
                set
                {
                    mInstance.Payload = value;
                }
            }


            /// <summary>
            /// Payload type.
            /// </summary>
            public string PayloadType
            {
                get
                {
                    return mInstance.PayloadType;
                }
                set
                {
                    mInstance.PayloadType = value;
                }
            }


            /// <summary>
            /// Total attempts.
            /// </summary>
            public int TotalAttempts
            {
                get
                {
                    return mInstance.TotalAttempts;
                }
                set
                {
                    mInstance.TotalAttempts = value;
                }
            }


            /// <summary>
            /// Last response.
            /// </summary>
            public string LastResponse
            {
                get
                {
                    return mInstance.LastResponse;
                }
                set
                {
                    mInstance.LastResponse = value;
                }
            }


            /// <summary>
            /// Processed.
            /// </summary>
            public bool IsProcessed
            {
                get
                {
                    return mInstance.IsProcessed;
                }
                set
                {
                    mInstance.IsProcessed = value;
                }
            }


            /// <summary>
            /// Context object type.
            /// </summary>
            public string ContextObjectType
            {
                get
                {
                    return mInstance.ContextObjectType;
                }
                set
                {
                    mInstance.ContextObjectType = value;
                }
            }


            /// <summary>
            /// Context object ID.
            /// </summary>
            public int ContextObjectId
            {
                get
                {
                    return mInstance.ContextObjectId;
                }
                set
                {
                    mInstance.ContextObjectId = value;
                }
            }


            /// <summary>
            /// References to other queued tasks that have to be executed prior to this one.
            /// </summary>
            public string DependsOnItemIds
            {
                get
                {
                    return mInstance.DependsOnItemIds;
                }
                set
                {
                    mInstance.DependsOnItemIds = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomTable_DataSubmissionQueueItem" /> class.
        /// </summary>
        public CustomTable_DataSubmissionQueueItem() : base(CLASS_NAME)
        {
            mFields = new CustomTable_DataSubmissionQueueItemFields(this);
        }

        #endregion
    }
}