//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using OslerAlumni.Core.Kentico.Models;

[assembly: RegisterDocumentType(PageType_Event.CLASS_NAME, typeof(PageType_Event))]

namespace OslerAlumni.Core.Kentico.Models
{
    /// <summary>
    /// Represents a content item of type PageType_Event.
    /// </summary>
    public partial class PageType_Event : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "OslerAlumni.PageType_Event";


        /// <summary>
        /// The instance of the class that provides extended API for working with PageType_Event fields.
        /// </summary>
        private readonly PageType_EventFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// PageType_EventID.
        /// </summary>
        [DatabaseIDField]
        public int PageType_EventID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("PageType_EventID"), 0);
            }
            set
            {
                SetValue("PageType_EventID", value);
            }
        }


        /// <summary>
        /// Hide from competitors.
        /// </summary>
        [DatabaseField]
        public bool HideFromCompetitors
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("HideFromCompetitors"), false);
            }
            set
            {
                SetValue("HideFromCompetitors", value);
            }
        }


        /// <summary>
        /// Name of the item in the content tree.
        /// </summary>
        [DatabaseField]
        public string PageName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("PageName"), @"");
            }
            set
            {
                SetValue("PageName", value);
            }
        }


        /// <summary>
        /// Title.
        /// </summary>
        [DatabaseField]
        public string Title
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Title"), @"");
            }
            set
            {
                SetValue("Title", value);
            }
        }


        /// <summary>
        /// Short Description.
        /// </summary>
        [DatabaseField]
        public string ShortDescription
        {
            get
            {
                return ValidationHelper.GetString(GetValue("ShortDescription"), @"");
            }
            set
            {
                SetValue("ShortDescription", value);
            }
        }


        /// <summary>
        /// Description.
        /// </summary>
        [DatabaseField]
        public string Description
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Description"), @"");
            }
            set
            {
                SetValue("Description", value);
            }
        }


        /// <summary>
        /// Location.
        /// </summary>
        [DatabaseField]
        public Guid Location
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("Location"), Guid.Empty);
            }
            set
            {
                SetValue("Location", value);
            }
        }


        /// <summary>
        /// City.
        /// </summary>
        [DatabaseField]
        public string City
        {
            get
            {
                return ValidationHelper.GetString(GetValue("City"), @"");
            }
            set
            {
                SetValue("City", value);
            }
        }


        /// <summary>
        /// Start Date.
        /// </summary>
        [DatabaseField]
        public DateTime StartDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("StartDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("StartDate", value);
            }
        }


        /// <summary>
        /// End Date.
        /// </summary>
        [DatabaseField]
        public DateTime EndDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("EndDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("EndDate", value);
            }
        }


        /// <summary>
        /// Display Date.
        /// </summary>
        [DatabaseField]
        public string DisplayDate
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DisplayDate"), @"");
            }
            set
            {
                SetValue("DisplayDate", value);
            }
        }


        /// <summary>
        /// Display Time.
        /// </summary>
        [DatabaseField]
        public string DisplayTime
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DisplayTime"), @"");
            }
            set
            {
                SetValue("DisplayTime", value);
            }
        }


        /// <summary>
        /// Hosted By Osler.
        /// </summary>
        [DatabaseField]
        public bool HostedByOsler
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("HostedByOsler"), false);
            }
            set
            {
                SetValue("HostedByOsler", value);
            }
        }


        /// <summary>
        /// External URL.
        /// </summary>
        [DatabaseField]
        public string ExternalURL
        {
            get
            {
                return ValidationHelper.GetString(GetValue("ExternalURL"), @"");
            }
            set
            {
                SetValue("ExternalURL", value);
            }
        }


        /// <summary>
        /// Delivery Methods.
        /// </summary>
        [DatabaseField]
        public string DeliveryMethods
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DeliveryMethods"), @"InPerson");
            }
            set
            {
                SetValue("DeliveryMethods", value);
            }
        }


        /// <summary>
        /// OnePlace Function.
        /// </summary>
        [DatabaseField]
        public string OnePlaceFunctionId
        {
            get
            {
                return ValidationHelper.GetString(GetValue("OnePlaceFunctionId"), @"");
            }
            set
            {
                SetValue("OnePlaceFunctionId", value);
            }
        }


        /// <summary>
        /// Show Attendees.
        /// </summary>
        [DatabaseField]
        public bool ShowAttendees
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("ShowAttendees"), false);
            }
            set
            {
                SetValue("ShowAttendees", value);
            }
        }


        /// <summary>
        /// SortOrder.
        /// </summary>
        [DatabaseField]
        public int SortOrder
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("SortOrder"), 0);
            }
            set
            {
                SetValue("SortOrder", value);
            }
        }


        /// <summary>
        /// SortDummyDateTimeTicks.
        /// </summary>
        [DatabaseField]
        public long SortDummyDateTimeTicks
        {
            get
            {
                return ValidationHelper.GetLong(GetValue("SortDummyDateTimeTicks"), 0);
            }
            set
            {
                SetValue("SortDummyDateTimeTicks", value);
            }
        }


        /// <summary>
        /// When enabled, prevent site visitors from navigating to the page directly.
        /// If the page has any URLs associated with it, they will be removed.
        /// </summary>
        [DatabaseField]
        public bool DocumentMenuItemHideInNavigation1
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("DocumentMenuItemHideInNavigation"), false);
            }
            set
            {
                SetValue("DocumentMenuItemHideInNavigation", value);
            }
        }


        /// <summary>
        /// Name of the MVC Controller code class that should be responsible for rendering this page on the front-end.
        /// </summary>
        [DatabaseField]
        public string DefaultController
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DefaultController"), @"");
            }
            set
            {
                SetValue("DefaultController", value);
            }
        }


        /// <summary>
        /// Name of the action method of the MVC Controller code class that should be responsible for rendering this page on the front-end.
        /// </summary>
        [DatabaseField]
        public string DefaultAction
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DefaultAction"), @"");
            }
            set
            {
                SetValue("DefaultAction", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with PageType_Event fields.
        /// </summary>
        [RegisterProperty]
        public PageType_EventFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with PageType_Event fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class PageType_EventFields : AbstractHierarchicalObject<PageType_EventFields>
        {
            /// <summary>
            /// The content item of type PageType_Event that is a target of the extended API.
            /// </summary>
            private readonly PageType_Event mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="PageType_EventFields" /> class with the specified content item of type PageType_Event.
            /// </summary>
            /// <param name="instance">The content item of type PageType_Event that is a target of the extended API.</param>
            public PageType_EventFields(PageType_Event instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// PageType_EventID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.PageType_EventID;
                }
                set
                {
                    mInstance.PageType_EventID = value;
                }
            }


            /// <summary>
            /// Hide from competitors.
            /// </summary>
            public bool HideFromCompetitors
            {
                get
                {
                    return mInstance.HideFromCompetitors;
                }
                set
                {
                    mInstance.HideFromCompetitors = value;
                }
            }


            /// <summary>
            /// Name of the item in the content tree.
            /// </summary>
            public string PageName
            {
                get
                {
                    return mInstance.PageName;
                }
                set
                {
                    mInstance.PageName = value;
                }
            }


            /// <summary>
            /// Title.
            /// </summary>
            public string Title
            {
                get
                {
                    return mInstance.Title;
                }
                set
                {
                    mInstance.Title = value;
                }
            }


            /// <summary>
            /// Short Description.
            /// </summary>
            public string ShortDescription
            {
                get
                {
                    return mInstance.ShortDescription;
                }
                set
                {
                    mInstance.ShortDescription = value;
                }
            }


            /// <summary>
            /// Description.
            /// </summary>
            public string Description
            {
                get
                {
                    return mInstance.Description;
                }
                set
                {
                    mInstance.Description = value;
                }
            }


            /// <summary>
            /// Location.
            /// </summary>
            public Guid Location
            {
                get
                {
                    return mInstance.Location;
                }
                set
                {
                    mInstance.Location = value;
                }
            }


            /// <summary>
            /// City.
            /// </summary>
            public string City
            {
                get
                {
                    return mInstance.City;
                }
                set
                {
                    mInstance.City = value;
                }
            }


            /// <summary>
            /// Start Date.
            /// </summary>
            public DateTime StartDate
            {
                get
                {
                    return mInstance.StartDate;
                }
                set
                {
                    mInstance.StartDate = value;
                }
            }


            /// <summary>
            /// End Date.
            /// </summary>
            public DateTime EndDate
            {
                get
                {
                    return mInstance.EndDate;
                }
                set
                {
                    mInstance.EndDate = value;
                }
            }


            /// <summary>
            /// Display Date.
            /// </summary>
            public string DisplayDate
            {
                get
                {
                    return mInstance.DisplayDate;
                }
                set
                {
                    mInstance.DisplayDate = value;
                }
            }


            /// <summary>
            /// Display Time.
            /// </summary>
            public string DisplayTime
            {
                get
                {
                    return mInstance.DisplayTime;
                }
                set
                {
                    mInstance.DisplayTime = value;
                }
            }


            /// <summary>
            /// Hosted By Osler.
            /// </summary>
            public bool HostedByOsler
            {
                get
                {
                    return mInstance.HostedByOsler;
                }
                set
                {
                    mInstance.HostedByOsler = value;
                }
            }


            /// <summary>
            /// External URL.
            /// </summary>
            public string ExternalURL
            {
                get
                {
                    return mInstance.ExternalURL;
                }
                set
                {
                    mInstance.ExternalURL = value;
                }
            }


            /// <summary>
            /// Delivery Methods.
            /// </summary>
            public string DeliveryMethods
            {
                get
                {
                    return mInstance.DeliveryMethods;
                }
                set
                {
                    mInstance.DeliveryMethods = value;
                }
            }


            /// <summary>
            /// OnePlace Function.
            /// </summary>
            public string OnePlaceFunctionId
            {
                get
                {
                    return mInstance.OnePlaceFunctionId;
                }
                set
                {
                    mInstance.OnePlaceFunctionId = value;
                }
            }


            /// <summary>
            /// Show Attendees.
            /// </summary>
            public bool ShowAttendees
            {
                get
                {
                    return mInstance.ShowAttendees;
                }
                set
                {
                    mInstance.ShowAttendees = value;
                }
            }


            /// <summary>
            /// SortOrder.
            /// </summary>
            public int SortOrder
            {
                get
                {
                    return mInstance.SortOrder;
                }
                set
                {
                    mInstance.SortOrder = value;
                }
            }


            /// <summary>
            /// SortDummyDateTimeTicks.
            /// </summary>
            public long SortDummyDateTimeTicks
            {
                get
                {
                    return mInstance.SortDummyDateTimeTicks;
                }
                set
                {
                    mInstance.SortDummyDateTimeTicks = value;
                }
            }


            /// <summary>
            /// CTAs that are to appear in the top widget zone, if the template of the page supports it.
            /// </summary>
            public IEnumerable<TreeNode> TopWidgetZone
            {
                get
                {
                    return mInstance.GetRelatedDocuments("TopWidgetZone");
                }
            }


            /// <summary>
            /// Related Content Widget Zone.
            /// </summary>
            public IEnumerable<TreeNode> RelatedContentWidgetZone
            {
                get
                {
                    return mInstance.GetRelatedDocuments("RelatedContentWidgetZone");
                }
            }


            /// <summary>
            /// When enabled, prevent site visitors from navigating to the page directly.
            /// If the page has any URLs associated with it, they will be removed.
            /// </summary>
            public bool DocumentMenuItemHideInNavigation
            {
                get
                {
                    return mInstance.DocumentMenuItemHideInNavigation1;
                }
                set
                {
                    mInstance.DocumentMenuItemHideInNavigation1 = value;
                }
            }


            /// <summary>
            /// Name of the MVC Controller code class that should be responsible for rendering this page on the front-end.
            /// </summary>
            public string DefaultController
            {
                get
                {
                    return mInstance.DefaultController;
                }
                set
                {
                    mInstance.DefaultController = value;
                }
            }


            /// <summary>
            /// Name of the action method of the MVC Controller code class that should be responsible for rendering this page on the front-end.
            /// </summary>
            public string DefaultAction
            {
                get
                {
                    return mInstance.DefaultAction;
                }
                set
                {
                    mInstance.DefaultAction = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="PageType_Event" /> class.
        /// </summary>
        public PageType_Event() : base(CLASS_NAME)
        {
            mFields = new PageType_EventFields(this);
        }

        #endregion
    }
}
