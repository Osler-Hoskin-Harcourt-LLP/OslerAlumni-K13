@model LandingPageViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var itemTitleLength = 75;
    var itemShortDescriptionLength = 130;
}

<div class="c-jobs">
    <div class="c-listing c-jobs-listing"
        data-type="boardOpportunities"
        data-culture="@Html.Osler().GetCurrentCultureName()"
        data-orderby="@nameof(BoardOpportunity.PostedDate)"
        data-orderbydirection="@OrderByDirection.Descending"
        data-ispreviewmode="@Html.Osler().IsPreviewMode()"
        data-pagenumber="1"
        data-includefilters="true"
        data-mainlist="c-jobs-listing-main"
        data-mainpagesize="@Model.MainListPageSize"
        data-clearcultureparams="true">

        <div class="row">
            <div class="columns small-12 medium-8">
                <div class="o-cell-heading">
                    <h1>@Model.Title</h1>
                    @if (!string.IsNullOrWhiteSpace(Model.Description))
                    {
                        @Html.OslerForModel().RichTextFieldFor(Model.Description).ToHtmlString()
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="columns small-12 medium-4 push-right">

                <h2 class="cloak-h4">@ResHelper.GetString(Constants.ResourceStrings.BoardOpportunity.SearchBoardOpportunityHeader)</h2>

                <div class="c-form-field c-form-field-combo">
                    <!-- <search-filter :results="results"></search-filter> -->
                    <div class="c-form-field-wrapper">
                        <div class="c-button-clear-wrapper">
                            <label for="searchResources" class="show-for-sr">@ResHelper.GetString(Constants.ResourceStrings.Resource.SearchResourcesHeader)</label>
                            <input v-model="keywords" @@keyup.enter="keywordSearch" class="text-box single-line" value="keywords" id="searchResources" name="searchResources" type="text" placeholder="@ResHelper.GetString(Constants.ResourceStrings.Resource.SearchBoxPlaceholder)" aria-describedby="searchDirections">
                            <button  v-on:click.stop.prevent="clearKeywords" type="submit" class="c-button-clear"><span class="show-for-sr">@ResHelper.GetString(Constants.ResourceStrings.SearchResults.ClearKeywords)</span></button>
                        </div>
                        <button v-on:click.stop.prevent="keywordSearch" type="submit" class="c-button-primary c-button-search">@ResHelper.GetString(Constants.ResourceStrings.Resource.SearchButtonText)</button>
                    </div>
                </div>

                <span class="is-small" id="searchDirections">@ResHelper.GetString(Constants.ResourceStrings.BoardOpportunity.SearchDirections)</span>

                <filters :filters="filters" :selectedfilters="selectedFilters" v-on:filter-data="filterPage" :search-request="searchRequest" v-on:clear-filter-data="filterPage" v-if="hasFilters"></filters>

            </div>
            <div class="columns small-12 medium-8 transition-wrap c-listings-top" tabindex="0">
                <h2>@ResHelper.GetString(Constants.ResourceStrings.BoardOpportunity.BoardOpportunityListHeader)</h2>
                <!-- main listing -->
                <div class="c-jobs-listing-main" v-cloak>
                    <div aria-live="polite" aria-atomic="true">
                        <div class="c-list-results" v-if="totalItemCount > 0">
                            <p class="is-small is-bold">{{totalResultsCountDisplay}}</p>
                        </div>

                        <!-- show no listings message -->
                        <div v-if="!hasResults && !IsKeywordOrFilteredSearch && !hasError && loading == false" v-cloak aria-live="polite" aria-atomic="true">
                            <div class="c-list-error-server" tabindex="0">
                                <p class="c-list-error-server-title">
                                    @ResHelper.GetString(Constants.ResourceStrings.BoardOpportunity.NoListingsMessage)</p>
                            </div>
                        </div>

                        <!-- show no results found message -->
                        <div v-if="IsKeywordOrFilteredSearch && !hasResults && !hasError" v-cloak aria-live="polite" aria-atomic="true">
                            @Html.Partial("_ListNoResults")

                        </div>

                        <!-- show server error -->
                        <div class="" v-if="hasError" v-cloak aria-live="polite" aria-atomic="true">
                            @Html.Partial("_ListServerError")
                        </div>
                    </div>
                    <transition appear name="fade">
                        <!-- loader -->
                        @Html.Partial("_Loader")
                        <main-list :results="results" v-if="totalItemCount && loading == false"></main-list>
                    </transition>
                </div>
            </div>
        </div>

        <!-- pagination -->
        <div class="row" v-if="totalItemCount > @Model.MainListPageSize && !loading">
            <div class="columns small-12 medium-8 medium-offset-4">
                <nav class="c-pagination" aria-label="pagination">
                    <uib-pagination class="c-pagination-list"
                                    v-model="pagination"
                                    @@change="onPageChange"
                                    :total-items="totalItemCount"
                                    :items-per-page="@Model.MainListPageSize"
                                    :boundary-link-numbers="true"
                                    :force-ellipses="true"
                                    :max-size="paginationSize"
                                    :rotate="true">
                    </uib-pagination>
                </nav>
            </div>
        </div>
    </div>

    <!-- listing template -->
    <template id="list-template" v-cloak>
        <div class="c-list c-jobs-list">
            <div class="c-list-item c-jobs-item" v-for="(result, index) in results" :data-item="index">
                <h3 class="cloak-cta-small">
                    <a v-if="result.externalUrl" :href="result.externalUrl" class="is-external" target="_blank">{{result.title | trimSpace | truncate(@itemTitleLength) }}</a>
                    <a v-else :href="result.pageUrl" class="is-internal">{{result.title | trimSpace | truncate(@itemTitleLength) }}</a>
                </h3>
                <p class="is-description">{{result.company}} <span>&#8226;</span> {{result.location}}</p>
                <p v-if="result.shortDescription">{{ result.shortDescription | truncate(@itemShortDescriptionLength) }}</p>
                <p class="is-small">
                    <span class="is-bold" v-if="result.boardOpportunityType">{{result.boardOpportunityType}} &#8226;</span>
                    <span>{{result.jobDateAndCategoryDisplay}}</span>
                </p>
            </div>
        </div>
    </template>

    <!-- filter group template -->
    <template id="filters" v-cloak>
        <div class="c-accordion-wrap">
            <div class="c-accordion-heading">
                <h2 class="cloak-h4">@ResHelper.GetString(Constants.ResourceStrings.Resource.FiltersHeader)</h2>
                <a href="#" class="is-small" v-on:click.stop.prevent="handleClearAllFilters">@ResHelper.GetString(Constants.ResourceStrings.Resource.ClearFiltersText)</a>
            </div>
            <div class="c-accordion-groups">
                <div class="c-accordion" v-for="(filter, index) in filters">
                    <button type="button" class="c-accordion-head" data-toggle :aria-expanded="searchRequest.hasOwnProperty(filter.fieldName) ? 'true' : 'false'" v-bind:aria-controls="[filter.fieldName + '-panel']" v-bind:id="[filter.fieldName + '-trigger']" @@click="toggle($event.target)">{{filter.title}}</button>
                    <div class="c-accordion-panel" v-bind:id="[filter.fieldName + '-panel']" v-bind:aria-labelledby="[filter.fieldName + '-trigger']"  :aria-hidden="searchRequest.hasOwnProperty(filter.fieldName) ? 'false' : 'true'">
                        <div class="c-accordion-body">
                            <a href="#" class="c-accordion-clear" v-on:click.stop.prevent="handleClearFilterGroup(filter.fieldName)">@ResHelper.GetString(Constants.ResourceStrings.Resource.ClearAllFiltersText)</a>
                            <fieldset v-if="filter.options" tabindex="-1" role="checkbox" aria-required="false">
                                <legend><span class="show-for-sr">{{filter.title}}</span></legend>
                                <div class="c-form-field c-form-field-checkbox" v-for="(filteroption, index) in filter.options">
                                    <div class="c-form-field-wrapper">
                                        <input v-model="selectedfilters[filter.fieldName]" :value="filteroption.codeName" :id="filteroption.codeName" type="checkbox" :name="filter.fieldName">
                                        <label :for="filteroption.codeName" class="is-light is-large">{{filteroption.displayName}}</label>
                                    </div>
                                </div>
                            </fieldset>
                            <div v-else class="c-form-field">
                                <div class="c-form-field-wrapper">
                                    <label :for="filter.fieldName" class="show-for-sr">{{filter.title}}</label>
                                    <input v-model="selectedfilters[filter.fieldName]" class="text-box single-line" :id="filter.fieldName" :name="filter.fieldName" type="text" :placeholder="filter.placeHolderText" v-on:keyup.enter="handleFilters" :aria-describedby="[filter.fieldName + '-explaination']">
                                    <p class="show-for-sr" :id="[filter.fieldName + '-explaination']">{{filter.placeHolderText}}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button class="c-button c-button-primary" v-on:click="handleFilters">@ResHelper.GetString(Constants.ResourceStrings.Resource.ApplyFiltersText)</button>
        </div>
    </template>
</div>


