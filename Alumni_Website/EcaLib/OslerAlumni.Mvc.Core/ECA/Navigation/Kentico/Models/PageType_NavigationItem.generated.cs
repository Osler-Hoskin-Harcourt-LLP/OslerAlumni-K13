//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using ECA.Mvc.Navigation.Kentico.Models;

[assembly: RegisterDocumentType(PageType_NavigationItem.CLASS_NAME, typeof(PageType_NavigationItem))]

namespace ECA.Mvc.Navigation.Kentico.Models
{
    /// <summary>
    /// Represents a content item of type PageType_NavigationItem.
    /// </summary>
    public partial class PageType_NavigationItem : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "ECA.PageType_NavigationItem";


        /// <summary>
        /// The instance of the class that provides extended API for working with PageType_NavigationItem fields.
        /// </summary>
        private readonly PageType_NavigationItemFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// NavigationItemID.
        /// </summary>
        [DatabaseIDField]
        public int NavigationItemID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("NavigationItemID"), 0);
            }
            set
            {
                SetValue("NavigationItemID", value);
            }
        }


        /// <summary>
        /// Name of the item in the content tree.
        /// </summary>
        [DatabaseField]
        public string PageName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("PageName"), @"");
            }
            set
            {
                SetValue("PageName", value);
            }
        }


        /// <summary>
        /// Name of the navigation item.
        /// </summary>
        [DatabaseField]
        public string Title
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Title"), @"");
            }
            set
            {
                SetValue("Title", value);
            }
        }


        /// <summary>
        /// Page in the content tree that the navigation item should link to. Has priority over the external URL.
        /// </summary>
        [DatabaseField]
        public Guid PageGUID
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("PageGUID"), Guid.Empty);
            }
            set
            {
                SetValue("PageGUID", value);
            }
        }


        /// <summary>
        /// URL of an external page that the navigation item should link to. Will only be used if "Linked Page" value is empty.
        /// </summary>
        [DatabaseField]
        public string ExternalURL
        {
            get
            {
                return ValidationHelper.GetString(GetValue("ExternalURL"), @"");
            }
            set
            {
                SetValue("ExternalURL", value);
            }
        }


        /// <summary>
        /// Is Protected.
        /// </summary>
        [DatabaseField]
        public bool IsProtected
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("IsProtected"), false);
            }
            set
            {
                SetValue("IsProtected", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with PageType_NavigationItem fields.
        /// </summary>
        [RegisterProperty]
        public PageType_NavigationItemFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with PageType_NavigationItem fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class PageType_NavigationItemFields : AbstractHierarchicalObject<PageType_NavigationItemFields>
        {
            /// <summary>
            /// The content item of type PageType_NavigationItem that is a target of the extended API.
            /// </summary>
            private readonly PageType_NavigationItem mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="PageType_NavigationItemFields" /> class with the specified content item of type PageType_NavigationItem.
            /// </summary>
            /// <param name="instance">The content item of type PageType_NavigationItem that is a target of the extended API.</param>
            public PageType_NavigationItemFields(PageType_NavigationItem instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// NavigationItemID.
            /// </summary>
            public int NavigationItemID
            {
                get
                {
                    return mInstance.NavigationItemID;
                }
                set
                {
                    mInstance.NavigationItemID = value;
                }
            }


            /// <summary>
            /// Name of the item in the content tree.
            /// </summary>
            public string PageName
            {
                get
                {
                    return mInstance.PageName;
                }
                set
                {
                    mInstance.PageName = value;
                }
            }


            /// <summary>
            /// Name of the navigation item.
            /// </summary>
            public string Title
            {
                get
                {
                    return mInstance.Title;
                }
                set
                {
                    mInstance.Title = value;
                }
            }


            /// <summary>
            /// Page in the content tree that the navigation item should link to. Has priority over the external URL.
            /// </summary>
            public Guid PageGUID
            {
                get
                {
                    return mInstance.PageGUID;
                }
                set
                {
                    mInstance.PageGUID = value;
                }
            }


            /// <summary>
            /// URL of an external page that the navigation item should link to. Will only be used if "Linked Page" value is empty.
            /// </summary>
            public string ExternalURL
            {
                get
                {
                    return mInstance.ExternalURL;
                }
                set
                {
                    mInstance.ExternalURL = value;
                }
            }


            /// <summary>
            /// Is Protected.
            /// </summary>
            public bool IsProtected
            {
                get
                {
                    return mInstance.IsProtected;
                }
                set
                {
                    mInstance.IsProtected = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="PageType_NavigationItem" /> class.
        /// </summary>
        public PageType_NavigationItem() : base(CLASS_NAME)
        {
            mFields = new PageType_NavigationItemFields(this);
        }

        #endregion
    }
}
